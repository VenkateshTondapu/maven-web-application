node {
   try {
    notifyBuild('STARTED')
   def maveenHome = tool name: "Maveen3.8.5" // This varaible contain the home directory of maveen verion we installed in jenkins. jenkins will provide this.
   //var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/Maveen3.8.5
   
  properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])]) // this prioeprtey is to discard past buillds and poll scm.
   
   stage ('checkoutCode') { // This stage is for to checkout the code.
      git branch: 'Development', url: 'https://github.com/VenkateshTondapu/maven-web-application.git'
   } 
   
   stage ('Build') { // this stage is for maveen build
       sh "${maveenHome}/bin/mvn clean package"
   }
   
   stage ('SonarCheck') { // this stage is for sonar scan.
		 sh "${maveenHome}/bin/mvn sonar:sonar"
    }

	stage ('Publish Artifactory') { // this stage is to deploy the artifactory 
		 sh "${maveenHome}/bin/mvn deploy"
	}
	
	stage ('tomcat Deployment') { // This stage is to deploy war file into tomcat
	    sshagent(['3460080c-202d-4214-8088-4700b9d55273']) {
	    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.34.225:/opt/apache-tomcat-9.0.76/webapps"}
	}
	
  }catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
